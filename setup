#!/bin/bash

xray_script="./xray.sh"

populate_dropdown() {
  local pattern="$1"
  local placeholder="$2"
  local data="$3"
  local comment="$4"
  local file="$xray_script"

  arg="# @raycast.$comment {\"type\": \"dropdown\", \"placeholder\": \"$placeholder\", \"data\": [{\"title\": \"$pattern\", \"value\": \"$pattern\"},$data]}"
  sed -i '' "/# @raycast.$comment/c\\
$arg
" "$file"
}

echo -e "\nIgnore jq parse errors\n"

echo "Populating configs dropdown"
configs=$(find ~ /opt -path ~/Library -prune -o -name "*.json" -exec grep -l '"inbounds"' {} + 2>/dev/null | while read -r config; do
  if jq empty "$config" 2>/dev/null; then
    address=$(jq -r '.outbounds[].settings.vnext[0].address // .inbounds[].settings.clients[].address' "$config" 2>/dev/null)
    [[ -z "$address" ]] && continue
    filename=$(basename "$config")
    printf '{"title": "%s (%s)", "value": "%s"}\n' "$address" "$filename" "$config"
  fi
done | paste -sd, -)
populate_dropdown "Setup" "config" "$configs" "argument1"

echo "Populating apps dropdown"
apps=$(find /Applications -type d -name "*.app" ! -path "*/Contents/*" | while read -r app; do 
  app_name=$(basename "$app" .app)
  printf '{"title": "%s", "value": "%s"}\n' "$app_name" "$app_name"
done | paste -sd, -)
populate_dropdown "System" "app" "$apps" "argument2"

echo "Populating ifaces dropdown"
ifaces=$(networksetup -listallnetworkservices | sed '1d' | while read -r iface; do
  printf '{"title": "%s", "value": "%s"}\n' "$iface" "$iface"
done | paste -sd, -)
populate_dropdown "Interface" "interface" "$ifaces" "argument3"

echo "Setting script to silent mode"
sed -i '' 's/# @raycast.mode fullOutput/# @raycast.mode silent/' "$xray_script"

echo -e "\nDone."